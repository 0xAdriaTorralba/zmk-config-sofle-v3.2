#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

&mt {
    tapping-term-ms = <150>;
    quick-tap-ms = <100>;
    require-prior-idle-ms = <125>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    num_tab: num_tab {
        compatible = "zmk,behavior-hold-tap";
        label = "NUM_TAB";
        bindings = <&mo>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <100>;
        require-prior-idle-ms = <100>;
        hold-trigger-key-positions = <13>;
    };

    service_mode: service_mode {
        compatible = "zmk,behavior-hold-tap";
        label = "SERVICE_MODE";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <150>;
        hold-trigger-key-positions = <0>;
    };

    cmd_t: cmd_t {
        compatible = "zmk,behavior-hold-tap";
        label = "CMD_T";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <150>;
        require-prior-idle-ms = <125>;
        flavor = "tap-preferred";
        hold-trigger-key-positions = <18>;
    };

    c_trencada: c_trencada {
        compatible = "zmk,behavior-hold-tap";
        label = "C_TRENCADA";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <150>;
        quick-tap-ms = <50>;
        require-prior-idle-ms = <125>;
        flavor = "tap-preferred";
        hold-trigger-key-positions = <42>;
    };

    enya: enya {
        compatible = "zmk,behavior-hold-tap";
        label = "ENYA";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <150>;
        quick-tap-ms = <50>;
        require-prior-idle-ms = <125>;
        flavor = "tap-preferred";
        hold-trigger-key-positions = <46>;
    };

    generic_tap_hold: generic_tap_hold {
        compatible = "zmk,behavior-hold-tap";
        label = "GENERIC_TAP_HOLD";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <150>;
        quick-tap-ms = <50>;
        require-prior-idle-ms = <125>;
        flavor = "tap-preferred";
        hold-trigger-key-positions = <12 11 37>;
    };

    cmd_space: cmd_space {
        compatible = "zmk,behavior-tap-dance";
        label = "CMD_SPACE";
        #binding-cells = <0>;
        bindings = <&mo 1>, <&kp LG(SPACE)>;

        tapping-term-ms = <200>;
    };

    alt_space: alt_space {
        compatible = "zmk,behavior-tap-dance";
        label = "ALT_SPACE";
        #binding-cells = <0>;
        bindings = <&mo 2>, <&kp LA(SPACE)>;

        tapping-term-ms = <200>;
    };

    macros {
        sleep: sleep {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(LG(EQUAL)))>;
            label = "SLEEP";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&service_mode LS(LA(APOSTROPHE)) GRAVE  &kp N1            &kp N2       &kp N3                   &kp N4          &kp N5            &kp UP_ARROW     &kp N6             &kp N7          &kp N8           &kp N9       &generic_tap_hold LS(MINUS) MINUS            &generic_tap_hold EQUAL N0
&num_tab 4 TAB                          &kp Q             &kp W        &kp E                    &kp R           &cmd_t LG(T) T    &kp DOWN_ARROW   &mt RIGHT_GUI Y    &mt LEFT_GUI U  &mt RIGHT_ALT I  &mt RCTRL O  &mt RIGHT_SHIFT P                            &kp RBKT
&kp CAPS                                &mt LEFT_SHIFT A  &mt LCTRL S  &mt LEFT_ALT D           &mt LEFT_GUI F  &kp G             &kp LEFT_ARROW   &kp H              &kp J           &kp K            &kp L        &generic_tap_hold LEFT_BRACKET SINGLE_QUOTE  &kp ENTER
&kp LSHFT                               &kp Z             &kp X        &c_trencada BACKSLASH C  &kp V           &kp B             &kp RIGHT_ARROW  &enya SEMICOLON N  &kp M           &kp COMMA        &kp DOT      &kp FSLH                                     &kp RSHFT
&kp C_MUTE                              &kp LCTRL         &kp LALT     &kp LGUI                 &kp BSPC        &cmd_space        &kp ENTER        &alt_space         &kp SPACE       &kp RGUI         &kp RALT     &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOLUME_UP>;
            display-name = "default";
        };

        lower_layer {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "lower";
            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "raise";
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        adjust_layer {
            display-name = "adjust";
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7      &kp F8    &kp F9      &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END     &kp UP    &kp HOME    &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &tog 5             &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT    &kp DOWN  &kp RIGHT   &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &kp C_PREV  &kp C_PP  &kp C_NEXT  &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans      &trans    &trans      &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        numeric_layer {
            display-name = "num";
            bindings = <
&trans  &trans   &trans       &trans  &trans  &trans    &mmv MOVE_UP     &trans  &trans  &kp PERCENT  &kp LS(N7)             &trans  &trans
&trans  &kp TAB  &kp LS(TAB)  &trans  &trans  &trans    &mmv MOVE_DOWN   &kp N7  &kp N8  &kp N9       &kp LS(RIGHT_BRACKET)  &trans  &trans
&trans  &trans   &sleep       &trans  &trans  &trans    &mmv MOVE_LEFT   &kp N4  &kp N5  &kp N6       &kp SLASH              &trans  &trans
&trans  &trans   &trans       &trans  &trans  &trans    &mmv MOVE_RIGHT  &kp N1  &kp N2  &kp N3       &kp RIGHT_BRACKET      &trans  &trans
&trans  &trans   &trans       &trans  &trans  &trans    &mkp LCLK        &trans  &kp N0  &kp DOT      &kp RETURN             &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "num";
        };

        game_layer {
            display-name = "default";
            bindings = <
&service_mode LS(LA(APOSTROPHE)) GRAVE  &kp N1     &kp N2    &kp N3                   &kp N4    &kp N5        &kp UP_ARROW     &kp N6             &kp N7     &kp N8     &kp N9    &generic_tap_hold LS(MINUS) MINUS            &generic_tap_hold EQUAL N0
&kp TAB                                 &kp Q      &kp W     &kp E                    &kp R     &kp T         &kp DOWN_ARROW   &kp Y              &kp U      &kp I      &kp O     &kp P                                        &kp RBKT
&kp CAPS                                &kp A      &kp S     &kp D                    &kp F     &kp G         &kp LEFT_ARROW   &kp H              &kp J      &kp K      &kp L     &generic_tap_hold LEFT_BRACKET SINGLE_QUOTE  &kp ENTER
&kp LSHFT                               &kp Z      &kp X     &c_trencada BACKSLASH C  &kp V     &kp B         &kp RIGHT_ARROW  &enya SEMICOLON N  &kp M      &kp COMMA  &kp DOT   &kp FSLH                                     &kp RSHFT
&kp C_MUTE                              &kp LCTRL  &kp LALT  &kp LGUI                 &kp BSPC  &cmd_space    &to 0            &alt_space         &kp SPACE  &kp RGUI   &kp RALT  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOLUME_UP>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
